<apex:page controller="n2de.Cls_Backfill_Controller" tabStyle="Distribution_Classifier__tab" sidebar="false"
           standardStylesheets="false" docType="html-5.0" title="Distribution Engine: Backfill"
           action="{!init}">
    <html>

        <head>
            <c:PageHead />

            <script defer="defer">
                window.addEventListener("load", function() {
                    <c:ApplicationContext attrOrgNamespace="{!JSENCODE(OrgNamespace)}" attrIsSandbox="{!IsSandbox}" attrIsDeveloperOrg="{!IsDeveloperOrg}" attrIsTrialOrg="{!IsTrialOrg}"/>
                    <c:PageContext />

                    const getBackfillObjectOptions = new n2.dataProvider.VisualForce({
                        id: 'get-backfill-object-options',
                        methods: {
                            get: {
                                method: '{!$RemoteAction.Cls_Backfill_Controller.getLinkedObjects}'
                            }
                        }
                    });

                    const getBackClassificationOptions = new n2.dataProvider.VisualForce({
                        id: 'get-backfill-classification-options',
                        methods: {
                            get: {
                                method: '{!$RemoteAction.Cls_Backfill_Controller.getClassificationTypesForSObjectType}'
                            }
                        }
                    });

                    const getBackfillCriteriaOptions = new n2.dataProvider.Static({
                        id: 'get-backfill-criteria-options',
                        data: [{
                            label: 'All records',
                            value: 'all'
                        }, {
                            label: 'Records not processed',
                            value: 'not-processed'
                        }, {
                            label: 'Processed with unknown territories',
                            value: 'unknown-territories'
                        }, {
                            label: 'Records that failed backfill auto-conversion',
                            value: 'failed-auto-conversion-backfill-records'
                        }, {
                            label: 'Custom',
                            value: 'custom'
                        }]
                    });

                    const getBackfillFieldOptions = new n2.dataProvider.VisualForce({
                        id: 'get-backfill-field-options',
                        methods: {
                            get: {
                                method: '{!$RemoteAction.Cls_Backfill_Controller.getAllFieldOptions}'
                            }
                        }
                    });

                    const getPicklistFieldSelectOptions = new n2.dataProvider.VisualForce({
                        id: 'get-picklist-field-options',
                        methods: {
                            get: {
                                method: '{!$RemoteAction.Cls_Backfill_Controller.getPicklistFieldSelectOptions}'
                            }
                        }
                    });

                    const getBackfillFilters = new n2.dataProvider.VisualForce({
                        id: 'get-backfill-filters',
                        methods: {
                            get: {
                                method: '{!$RemoteAction.Cls_Backfill_Controller.getFilters}'
                            }
                        }
                    });

                    const getBackfillRecordCount = new n2.dataProvider.VisualForce({
                        id: 'get-backfill-record-count',
                        methods: {
                            get: {
                                method: '{!$RemoteAction.Cls_Backfill_Controller.getBackfillCount}',
                                config: {
                                    buffer: false,
                                    timeout: 120000
                                }
                            }
                        }
                    });

                    const performBackfill = new n2.dataProvider.VisualForce({
                        id: 'perform-backfill',
                        methods: {
                            post: {
                                method: '{!$RemoteAction.Cls_Backfill_Controller.performBackfill}'
                            }
                        }
                    });

                    const isBackfillInProgress = new n2.dataProvider.VisualForce({
                        id: 'is-backfill-in-progress',
                        methods: {
                            get: {
                                method: '{!$RemoteAction.Cls_Backfill_Controller.isBackfillInProgress}'
                            }
                        }
                    });

                    const backfillPage = new n2.de.page.classifier.Backfill({
                        id: 'backfill-page',
                        // getNavigationGroups is available from ClsNavigation, which is only included on V2 pages to allow us access to a centralised source for
                        // the navigation config, giving us the ability to support both V1 and V2 pages.
                        navigationGroups: getNavigationGroups('backfill')
                    });

                    backfillPage.render();
                });
            </script>
        </head>

        <body>
            <!--
                NOTE: This page exists here to group the classifier pages together.  Unlike the other classifier pages however we need this to be built in V2 of
                N2JS rather than V1.  As we encounter more changes in the V1 pages we should look to convert them to V2.
            -->
            <c:ClsNavigation pkgNamespace="{!OrgNamespace}" useN2JSV1="false"/>
        </body>

    </html>
</apex:page>