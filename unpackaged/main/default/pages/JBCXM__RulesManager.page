<apex:page docType="html-5.0" controller="JBCXM.AdminBroker" sidebar="false" title="Rules Manager" tabStyle="Administration__tab" extensions="JBCXM.NSRemoting,JBCXM.GSCommonBroker">

    <link href='https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap'  rel="stylesheet"/>
    <link href="https://fonts.googleapis.com/css?family=Material+Icons&display=block" rel="stylesheet"/>

    <!-- Polyfill JS files to support old browsers -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/es6-shim/0.35.6/es6-shim.min.js" integrity="sha512-Dg4/NsM35WYe4Vpj/ZzxsN7K4ifsi6ecw9+VB5rmCntqoQjEu4dQxL6/qQVebHalidCqWiVkWVK59QtJCCjBDQ==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/webcomponentsjs/2.4.4/custom-elements-es5-adapter.js" integrity="sha512-ghu3B55L7mKaf35O7RoyJTyarNPaxcpas/jKNvZAEBMRxr7BR4Oi52Aqnv/H8kyiXZtTVH9IZ490f9z7F4f4kA==" crossorigin="anonymous"></script>
    <!-- End of Polyfills-->

    <style>
        * {
            /* Support for all WebKit browsers. */
            -webkit-font-smoothing: antialiased;
            /* Support for Safari and Chrome. */
            text-rendering: optimizeLegibility;
            /* Support for Firefox. */
            -moz-osx-font-smoothing: grayscale;
            /* Support for IE. */
            font-feature-settings: 'liga';
        }
        html, body {
            -webkit-text-size-adjust: 100%;
            -ms-text-size-adjust: 100%;
            -ms-overflow-style: scrollbar;
            min-height: 100%;
        }
        #contentWrapper {
            height: 100%;
        }

        /* Following styles needed to avoid extra padding to body tag in lightning mode*/
        html body.sfdcBody, .gainsight-app, .gs-app {
            /* Uses system default installed fonts as fallback if Roboto font is not available*/
            font-family: Roboto, -apple-system, BlinkMacSystemFont, 'Segoe UI', 'PingFang SC', 'Hiragino Sans GB',
            'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif, 'Apple Color Emoji',
            'Segoe UI Emoji', 'Segoe UI Symbol';
            margin: 0;
            padding: 0;
            height: 100%;
            background: #FBFBFC;
        }
        .navexStandardManager>.center.oneCenterStage {
            top:0;
            transform:none;
        }

        .material-icons {
            font-family: 'Material Icons';
            font-weight: normal;
            font-style: normal;
            font-size: 24px; /* Preferred icon size */
            display: inline-block;
            line-height: 1;
            text-transform: none;
            letter-spacing: normal;
            word-wrap: normal;
            white-space: nowrap;
            direction: ltr;

            /* Support for all WebKit browsers. */
            -webkit-font-smoothing: antialiased;
            /* Support for Safari and Chrome. */
            text-rendering: optimizeLegibility;

            /* Support for Firefox. */
            -moz-osx-font-smoothing: grayscale;

            /* Support for IE. */
            font-feature-settings: 'liga';
        }

        #bodyTable{
            height:100%;
            min-height:800px;
            padding-bottom:0px;
        }
        #bodyTable .noSidebarCell{
            padding:0
        }
        .bPageFooter.noTableFooter{
            display:none
        }
        #bodyTable .gs-module-container{
            height: calc(100vh - 51px);
        }
    </style>

    <div class="gs-app gainsight-app">
        <gs-root></gs-root>
    </div>

<apex:outputpanel rendered="{!If($CurrentPage.parameters.traceperformance == "true" , true, false)}">
    <script type="text/javascript">
        if(window.performance && window.performance.mark && window.performance.measure){
            window.GSPerformance = {
                map:{},
                mark: function(){
                    try{
                        window.performance.mark.apply(window.performance, arguments);
                    } catch(e){
                        console.log("Failed to create mark", e);
                    }
                },
                measure: function(measureName){
                    try{
                        measureName = this.map[measureName]?measureName_this.map[measureName]:measureName;
                        this.map[measureName] = this.map[measureName]?this.map[measureName]+1:1;
                        window.performance.measure.apply(window.performance, arguments);
                    } catch(e){
                        console.log("Failed to create measure", e);
                    }
                }
            };
        }
    </script>
</apex:outputpanel>
    <script type="text/javascript">
        if(!window.GSPerformance){
            window.GSPerformance = {};
            window.GSPerformance.mark = window.GSPerformance.measure = function(){};
        }
        window.GSPerformance.mark('apex_parsing_start');
    </script>
    <script src="/soap/ajax/31.0/connection.js" type="text/javascript"></script>
    <script src="/soap/ajax/31.0/apex.js" type="text/javascript"></script>
    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSVendor/js/vendor/semver.min.js"></script>
    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSVendor/js/vendor/HTMLSanitizer.js"></script>
    <script>
            var hc = fakeEval('{!JSINHTMLENCODE(headerConfig)}');
            var authorization = "";
            var appSessionId = hc.appSessionId;
            var appUserId = hc.appUserId;
            var appOrgId = hc.appOrgId;
            var apiEndPoint = hc.gatewayURL;
            var nsParams = fakeEval('{!JSINHTMLENCODE(nsParams)}');
            var CDNSettings = fakeEval("{!(JSINHTMLENCODE(GainsightCDNSettings))}");
            var GS = GS || {};
            var host = "SALESFORCE";
            GS.gainsightTabs = eval({!(GainsightTabs)});
            GS.nsParams = nsParams;
            GS.remoting = "{!$RemoteAction.NSRemoting.apinsinvoke}";
            GS.commonRemotingEndPoint     = '{!$RemoteAction.GSCommonBroker.gsCommonRequestBroker}';
            GS.commonRemotingBulkEndPoint     = '{!$RemoteAction.GSCommonBroker.gsCommonBulkRequestBroker}';
            GS.sessionId = "{!NSSessionId}";
            GS.NSSessionId = "{!NSSessionId}";
            GS.isScorecardEnabled = {!(isScorecardEnabled)};
            GS.isScorecardV2Enabled = {!(isScorecardV2Enabled)};
            GS.nsURL = nsParams.url;
            GS.remotingEndPoint     = '{!$RemoteAction.AdminBroker.adminRequestBroker}';
            GS.usageConfigInfo      = fakeEval('{!JSINHTMLENCODE(UsageConfigInfo)}');
            GS.packageNS            = "{!(pkgNS)}";
            GS.isPackagedInstance   = (GS.packageNS) ? "true" : "false";
            GS.customLookUpConfig   = fakeEval('{!JSINHTMLENCODE(customLookUpConfigMap)}');
            GS.nsScorecardEnabled   = {!(nsScorecardEnabled)};
            GS.userConfig = {
                userLocale  : {!(dateTimeFormatByLocale)},
                userName    : "{!(JSINHTMLENCODE($User.FirstName))}"+" "+"{!(JSINHTMLENCODE($User.LastName))}",
                userId      : "{!$User.Id}",
                emailId     : "{!$User.Email}",
                profilePhoto : "{!(profilePhoto)}",
                userDisplayName : "{!(JSINHTMLENCODE(userDisplayName))}",
                gainsightTabs: fakeEval('{!JSINHTMLENCODE(gainsightTabs)}'),
                isLightningEnabled: {!(isLightningEnabled)}
            };
            GS.ctaSources      = {!(ctaSources)};
            GS.packageVersion  = "{!(packageVersion)}";
            GS.gatewayURL = hc.gatewayURL;
            GS.isLightningEnabled =  hc.isLightningEnabled;

            window.GSPerformance.mark('apex_parsing_end');
            window.GSPerformance.measure("time_taken_by_sfdc_org", "apex_parsing_start", "apex_parsing_end");
             
            window.GSPerformance.mark('app_resource_start');
    </script>

    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSApp/cdnVersionResolver.js"  type="text/javascript"></script>
    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/GSApp/autonomous-module-loader.js" type="text/javascript"></script>

    <script>
        installResources({
            moduleName: "rules-engine",
            isNg: true,
            widgets: ['gs-app-container'],
            loadAdminNavItems: true,
            scripts: [
                "runtime-es5.js",
                "runtime-es2015.js",
                "polyfills-es2015.js",
                "polyfills-es5.js",
                "main-es2015.js",
                "main-es5.js"
            ],
            styles : ["styles.css"]
        });
    </script>

    <script>
        window.GSPerformance.mark('ga_start');
        var GSGA = {
            orgId: "{!$Organization.Id}",
            orgName: "{!(JSINHTMLENCODE($Organization.Name))}",
            userName: "{!(JSINHTMLENCODE($User.FirstName))}"+" "+"{!(JSINHTMLENCODE($User.LastName))}",
            userId: "{!$User.Id}"
        };
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    </script>
    <script src="{!JSINHTMLENCODE(GainsightCDNServerDomain)}gs-ui-static/{!JSINHTMLENCODE(GainsightAppVersion)}/CustomJS/CustomJS/analyticsWrapper.js"></script>
    <script>
        gainsightTrackEvents.pushPageViews('Rules Manager');
        window.GSPerformance.mark('ga_end');
        window.GSPerformance.measure('Google Analytics JS', 'ga_start', 'ga_end');
    </script>
</apex:page>